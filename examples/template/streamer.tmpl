<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>File Server Example</title>
    <style>
        body { font-family: Arial, sans-serif; }
        .breadcrumbs { list-style-type: none; padding: 0; }
        .breadcrumbs li { display: inline; }
        .file-list { list-style-type: none; padding: 0; }
        .file-list li { margin: 5px 0; }
        .file-list a { text-decoration: none; color: #007BFF; }
        .file-list a:hover { text-decoration: underline; }
    </style>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/hls.js/1.5.18/hls.min.js" integrity="sha512-hARxLWym80kd0Bzl5/93OuW1ujaKfvmJ90yTKak/RB67JuNIjtErU2H7H3bteyfzMuqiSK0tXarT7eK6lEWBBA==" crossorigin="anonymous" referrerpolicy="no-referrer" defer></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/alpinejs-focus/3.14.9/cdn.min.js" integrity="sha512-cbnb6RLeH6MQInYpFTaBZhIvqoV1SQMCT7gS/lcz5U5EbifRo1yHOlDHZOP0i/2oo7G9rSNpSGuqHdK3jByq2Q==" crossorigin="anonymous" referrerpolicy="no-referrer" defer></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/alpinejs/3.14.9/cdn.min.js" integrity="sha512-KSdieUYxSxr/laB3Bh5TP8GAng49b2qRfdcnFvh8OuPpPgksA189OQ9v1A3gIz5P9s3A4aXMe5uiHLMfla60Uw==" crossorigin="anonymous" referrerpolicy="no-referrer" defer></script>
</head>
<body>
    <h1>File Server Example</h1>
    {{- $trimmed := trimSuffix (trimPrefix .Path "/") "/" -}}
    {{- $breadCrumbs := split $trimmed "/" -}}
    {{- $path := "/" -}}
    <ul class="breadcrumbs">
    <li><a href="{{ $path }}">Home</a></li>
    {{- range $n, $v := $breadCrumbs -}}
    {{- $path = pathjoin $path $v -}}
    <li> / <a href="{{ $path }}{{ if not (hasSuffix $path "/") }}/{{ end }}">{{ $v }}</a></li>
    {{- end -}}
    </ul>
    <ul class="file-list">
        {{- range $n, $v := .FileList -}}
        {{- if and (eq $v.Name "images") ($.IsDir) }}{{ continue }}{{ end -}}
        {{- if eq true (hasSuffix $v.Name "_2160p.m3u8") (hasSuffix $v.Name "_1080p.m3u8") (hasSuffix $v.Name "_720p.m3u8") (hasSuffix $v.Name ".ts") (hasSuffix $v.Name "_Original.svg") }}{{ continue }}{{ end -}}
        <li x-data="player('video{{ $n }}', '{{ $v.Name }}')">
            <a href="{{ $v.Name }}{{ if $v.IsDir }}/{{ end }}"{{ if not $v.IsDir }} @click.prevent="openPlayer"{{ end }}>{{ if $v.IsDir }} <img src="/images/folder.svg" alt="folder">{{ else }}<img src="/images/file-earmark.svg" alt="file">{{ end }} {{ $v.Name }}</a>
            <template x-teleport="body">
                <div x-show="open" x-trap="open">
                    <img src="/images/x-lg.svg" alt="Close" @click="closePlayer">
                    <video id="video{{ $n }}"></video>
                </div>
            </template>
        </li>
        {{- end -}}
    </ul>
    <script>
    document.addEventListener('alpine:init', () => {
        Alpine.data('player', (intialId, initialSrc) => ({
            id: intialId,
            video: null,
            src: `${window.location.toString()}${initialSrc}`,
            hls: null,
            open: false,
            openPlayer() {
                console.log(`openPlayer(): id = ${this.id}, src = ${this.src}`);
                this.video = document.getElementById(this.id)
                this.open = true;
                
                if (Hls.isSupported()) {
                    console.log(`Hls.isSupported(): id = ${this.id}, src = ${this.src}`);
                    this.hls = new Hls();
                    this.hls.on(Hls.Events.MEDIA_ATTACHED, function () {
                        console.log('video and hls.js are now bound together !');
                    });
                    this.hls.on(Hls.Events.MANIFEST_PARSED, function (event, data) {
                        console.log(`manifest loaded, found ${data.levels.length} quality level`);
                    });
                    this.hls.on(Hls.Events.ERROR, function (event, data) {
                        var errorType = data.type;
                        var errorDetails = data.details;
                        var errorFatal = data.fatal;

                        console.log(`HLS Error: ${errorType} ${errorDetails} ${event}`);
                    });
                    
                    this.hls.loadSource(this.src);
                    this.hls.attachMedia(this.video);
                }
            },
            closePlayer() {
                console.log(`closePlayer(): src = ${this.src}`);
                this.open = false;
                if (this.hls !== null) {
                    this.hls.destroy();
                    this.hls = null;
                }
            },
        }));
    });
    </script>
</body>
</html>
